diff --git a/meson.build b/meson.build
index 40a41f135..e43831b27 100644
--- a/meson.build
+++ b/meson.build
@@ -2261,47 +2261,10 @@ endif
 # proxy-libintl subproject.
 # FIXME: glib-gettext.m4 has much more checks to detect broken/uncompatible
 # implementations. This could be extended if issues are found in some platforms.
-libintl_deps = []
-libintl_prefix = '#include <libintl.h>'
-libintl = dependency('intl', required: false)
-if libintl.found() and libintl.type_name() != 'internal'
-  # libintl supports different threading APIs, which may not
-  # require additional flags, but it defaults to using pthreads if
-  # found. Meson's "threads" dependency does not allow you to
-  # prefer pthreads. We may not be using pthreads for glib itself
-  # either so just link the library to satisfy libintl rather than
-  # also defining the macros with the -pthread flag.
-  #
-  # Meson's builtin dependency lookup as of 0.60.0 doesn't check for
-  # pthread, so we do this manually here.
-  if cc.has_function('ngettext', dependencies : libintl, prefix: libintl_prefix)
-    libintl_deps += [libintl]
-  else
-    libintl_iconv = cc.find_library('iconv', required : false)
-    if libintl_iconv.found() and cc.has_function('ngettext', args : osx_ldflags, dependencies : [libintl, libintl_iconv])
-      libintl_deps += [libintl, libintl_iconv]
-    else
-      libintl_pthread = cc.find_library('pthread', required : false)
-      if libintl_pthread.found() and cc.has_function('ngettext', dependencies : [libintl, libintl_pthread], prefix: libintl_prefix)
-        libintl_deps += [libintl, libintl_pthread]
-      else
-        libintl = disabler()
-      endif
-    endif
-  endif
-endif
-
-if libintl.found() and libintl.type_name() != 'internal'
-  have_bind_textdomain_codeset = cc.has_function('bind_textdomain_codeset', dependencies: libintl_deps, prefix: libintl_prefix)
-else
-  # using proxy-libintl fallback
-  libintl = dependency('intl', allow_fallback: true)
-  assert(libintl.type_name() == 'internal')
-  libintl_deps = [libintl]
-  have_bind_textdomain_codeset = true  # proxy-libintl supports it
-endif
-
-glib_conf.set('HAVE_BIND_TEXTDOMAIN_CODESET', have_bind_textdomain_codeset)
+intl_proj = subproject('proxy-libintl')
+intl_dep = intl_proj.get_variable('intl_dep')
+libintl_deps = [intl_dep]
+glib_conf.set('HAVE_BIND_TEXTDOMAIN_CODESET', true)
 
 # We require gettext to always be present
 glib_conf.set('HAVE_DCGETTEXT', 1)
